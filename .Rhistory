library(tidyverse)
library(dplyr)
library(ggplot2)
library(ggraph)
library(igraph)
library(readr)
library(devtools)
library(litsearchr)
packageVersion("litsearchr")
naive_results <- import_results(file="./data/DynTreatReg.bib")
naive_results <- import_results(file="./data/raw/DynTreatReg.bib")
naive_results <- import_results(file=./data/raw/DynTreatReg.bib)
naive_results <- import_results(file=/data/raw/DynTreatReg.bib)
naive_results <- import_results(file="/data/raw/DynTreatReg.bib")
naive_results <- import_results(file="C:/Users/liang008/Git/testrepo/data/raw/DynTreatReg.bib")
setwd("C:/Users/liang008/Git/testrepo")
naive_results <- import_results(file="./data/raw/DynTreatReg.bib")
#https://luketudge.github.io/litsearchr-tutorial/litsearchr_tutorial.html
install.packages("lintr")
library(lintr)
lint("Literature Search Dynamic Treatment regime based on known articles.R")
library(lintr)
naive_results <- import_results(file="./data/raw/DynTreatReg.bib")
lint("Literature Search Dynamic Treatment regime based on known articles.R")
install.packages("styler")
styler:::set_style_transformers()
styler:::style_active_file()
lint("Literature Search Dynamic Treatment regime based on known articles.R")
styler:::style_active_file()
lint("Literature Search Dynamic Treatment regime based on known articles.R")
lint("Literature Search Dynamic Treatment regime based on known articles.R")
lint("Literature Search Dynamic Treatment regime based on known articles.R")
lint("Literature Search Dynamic Treatment regime based on known articles.R")
lint("Literature Search Dynamic Treatment regime based on known articles.R")
lint("Literature Search Dynamic Treatment regime based on known articles.R")
# Two ways of generating keywords#
# First way
naive_results[1, "keywords"]
naive_results[1, "title"]
# This show the ones that already contains keywords
sum(is.na(naive_results[, "keywords"]))
# This is extracting keywords in the keywords field in the articles
extract_terms(keywords = naive_results[, "keywords"], method = "tagged")
keywords <- extract_terms(keywords = naive_results[, "keywords"],
method = "tagged", min_n = 2)
keywords
nrow(naive_results)
naive_results <- import_results(file = "./data/raw/DynTreatReg.bib")
nrow(naive_results)
colnames(naive_results)
naive_results[1, "title"]
print("amount of rows" + nrow(naive_results))
print("amount of rows" + "nrow(naive_results)")
print("amount of rows", "nrow(naive_results)")
print("amount of rows", nrow(naive_results))
terms <- unique(c(keywords, title_terms))
naive_results <- import_results(file = "./data/raw/DynTreatReg.bib")
nrow(naive_results)
colnames(naive_results)
naive_results[1, "title"]
# Two ways of generating keywords#
# First way
naive_results[1, "keywords"]
# This show the ones that already contains keywords
sum(is.na(naive_results[, "keywords"]))
# This is extracting keywords in the keywords field in the articles
extract_terms(keywords = naive_results[, "keywords"], method = "tagged")
?extract_terms
keywords <- extract_terms(keywords = naive_results[, "keywords"],
method = "tagged", min_n = 2)
keywords
# Another way is to use the RAKE methodology.
extract_terms(text = naive_results[, "title"], method = "fakerake",
min_freq = 3, min_n = 2)
title_terms <- extract_terms(
text = naive_results[, "title"],
method = "fakerake",
min_freq = 3, min_n = 2
)
title_terms
terms <- unique(c(keywords, title_terms))
terms
title_terms
extract_terms
keywords
fahrenheit_to_celsius <- function(temp_F) {
temp_C <- (temp_F - 32) * 5 / 9
return(temp_C)
}
View(fahrenheit_to_celsius)
View(fahrenheit_to_celsius)
colnames(naive_results)
# Two ways of generating keywords#
# First way
naive_results[1, "keywords"]
# This is extracting keywords in the keywords field in the articles
extract_terms(keywords = naive_results[, "keywords"], method = "tagged")
terms <- unique(c(keywords, title_terms))
terms
function(datasetlist) {
naive_results <- import_results(file = "datasetlist")
print("Amount of rows:")
nrow(naive_results)
print("Name of the columns")
colnames(naive_results)
print("Number of article without pre-existing keywords:")
sum(is.na(naive_results[, "keywords"]))
keywords <- extract_terms(keywords = naive_results[, "keywords"],
method = "tagged", min_n = 2)
extract_terms(text = naive_results[, "title"], method = "fakerake",
min_freq = 3, min_n = 2)
title_terms <- extract_terms(
text = naive_results[, "title"],
method = "fakerake",
min_freq = 3, min_n = 2
)
terms <- unique(c(keywords, title_terms))
print("These are the generated keywords and terms:")
}
GenerateKeywords <- function(datasetlist) {
naive_results <- import_results(file = "datasetlist")
print("Amount of rows:")
nrow(naive_results)
print("Name of the columns")
colnames(naive_results)
print("Number of article without pre-existing keywords:")
sum(is.na(naive_results[, "keywords"]))
keywords <- extract_terms(keywords = naive_results[, "keywords"],
method = "tagged", min_n = 2)
extract_terms(text = naive_results[, "title"], method = "fakerake",
min_freq = 3, min_n = 2)
title_terms <- extract_terms(
text = naive_results[, "title"],
method = "fakerake",
min_freq = 3, min_n = 2
)
terms <- unique(c(keywords, title_terms))
print("These are the generated keywords and terms:")
}
GenerateKeywords <- function(datasetlist) {
naive_results <- import_results(file = "./data/raw/datasetlist")
print("Amount of rows:")
nrow(naive_results)
print("Name of the columns")
colnames(naive_results)
print("Number of article without pre-existing keywords:")
sum(is.na(naive_results[, "keywords"]))
keywords <- extract_terms(keywords = naive_results[, "keywords"],
method = "tagged", min_n = 2)
extract_terms(text = naive_results[, "title"], method = "fakerake",
min_freq = 3, min_n = 2)
title_terms <- extract_terms(
text = naive_results[, "title"],
method = "fakerake",
min_freq = 3, min_n = 2
)
terms <- unique(c(keywords, title_terms))
print("These are the generated keywords and terms:")
}
GenerateKeywords(DynTreatReg.bib)
GenerateKeywords <- function(datasetlist) {
naive_results <- import_results(file = datasetlist)
print("Amount of rows:")
nrow(naive_results)
print("Name of the columns")
colnames(naive_results)
print("Number of article without pre-existing keywords:")
sum(is.na(naive_results[, "keywords"]))
keywords <- extract_terms(keywords = naive_results[, "keywords"],
method = "tagged", min_n = 2)
extract_terms(text = naive_results[, "title"], method = "fakerake",
min_freq = 3, min_n = 2)
title_terms <- extract_terms(
text = naive_results[, "title"],
method = "fakerake",
min_freq = 3, min_n = 2
)
terms <- unique(c(keywords, title_terms))
print("These are the generated keywords and terms:")
}
GenerateKeywords("./data/raw/DynTreatReg.bib")
GenerateKeywords <- function(datasetlist) {
naive_results <- import_results(file = datasetlist)
print("Amount of rows:")
nrow(naive_results)
print("Name of the columns")
colnames(naive_results)
print("Number of article without pre-existing keywords:")
sum(is.na(naive_results[, "keywords"]))
keywords <- extract_terms(keywords = naive_results[, "keywords"],
method = "tagged", min_n = 2)
extract_terms(text = naive_results[, "title"], method = "fakerake",
min_freq = 3, min_n = 2)
title_terms <- extract_terms(
text = naive_results[, "title"],
method = "fakerake",
min_freq = 3, min_n = 2
)
terms <- unique(c(keywords, title_terms))
print("These are the generated keywords and terms:")
}
GenerateKeywords("./data/raw/DynTreatReg.bib")
naive_results <- import_results(file = "./data/raw/DynTreatReg.bib")
GenerateKeywords("./data/raw/DynTreatReg.bib")
GenerateKeywords(naive_results)
GenerateKeywords <- function(naive_results) {
print("Amount of rows:")
nrow(x)
print("Name of the columns")
colnames(x)
print("Number of article without pre-existing keywords:")
sum(is.na(x[, "keywords"]))
keywords <- extract_terms(keywords = x[, "keywords"],
method = "tagged", min_n = 2)
extract_terms(text = x[, "title"], method = "fakerake",
min_freq = 3, min_n = 2)
title_terms <- extract_terms(
text = x[, "title"],
method = "fakerake",
min_freq = 3, min_n = 2
)
terms <- unique(c(keywords, title_terms))
print("These are the generated keywords and terms:")
}
GenerateKeywords(naive_results)
GenerateKeywords <- function(x) {
print("Amount of rows:")
nrow(x)
print("Name of the columns")
colnames(x)
print("Number of article without pre-existing keywords:")
sum(is.na(x[, "keywords"]))
keywords <- extract_terms(keywords = x[, "keywords"],
method = "tagged", min_n = 2)
extract_terms(text = x[, "title"], method = "fakerake",
min_freq = 3, min_n = 2)
title_terms <- extract_terms(
text = x[, "title"],
method = "fakerake",
min_freq = 3, min_n = 2
)
terms <- unique(c(keywords, title_terms))
print("These are the generated keywords and terms:")
}
GenerateKeywords(naive_results)
terms
GenerateKeywords <- function(x) {
print("Amount of rows:")
AmountRows <- nrow(x)
return(AmountRows)
print("Name of the columns")
NamesOfCoumns <- colnames(x)
return(NamesOfCoumns)
print("Number of article without pre-existing keywords:")
NAArticles <- sum(is.na(x[, "keywords"]))
return(NAArticles)
keywords <- extract_terms(keywords = x[, "keywords"],
method = "tagged", min_n = 2)
extract_terms(text = x[, "title"], method = "fakerake",
min_freq = 3, min_n = 2)
title_terms <- extract_terms(
text = x[, "title"],
method = "fakerake",
min_freq = 3, min_n = 2
)
terms <- unique(c(keywords, title_terms))
return(terms)
print("These are the generated keywords and terms:")
}
GenerateKeywords(naive_results)
GenerateKeywords <- function(x) {
print("Amount of rows:")
AmountRows <- nrow(x)
#return(AmountRows)
print("Name of the columns")
NamesOfCoumns <- colnames(x)
#return(NamesOfCoumns)
print("Number of article without pre-existing keywords:")
NAArticles <- sum(is.na(x[, "keywords"]))
#return(NAArticles)
keywords <- extract_terms(keywords = x[, "keywords"],
method = "tagged", min_n = 2)
extract_terms(text = x[, "title"], method = "fakerake",
min_freq = 3, min_n = 2)
title_terms <- extract_terms(
text = x[, "title"],
method = "fakerake",
min_freq = 3, min_n = 2
)
terms <- unique(c(keywords, title_terms))
return(terms)
print("These are the generated keywords and terms:")
}
GenerateKeywords(naive_results)
GenerateKeywords <- function(x) {
print("Amount of rows:")
AmountRows <- nrow(x)
AmountRows
print("Name of the columns")
NamesOfCoumns <- colnames(x)
NamesOfCoumns
print("Number of article without pre-existing keywords:")
NAArticles <- sum(is.na(x[, "keywords"]))
NAArticles
keywords <- extract_terms(keywords = x[, "keywords"],
method = "tagged", min_n = 2)
extract_terms(text = x[, "title"], method = "fakerake",
min_freq = 3, min_n = 2)
title_terms <- extract_terms(
text = x[, "title"],
method = "fakerake",
min_freq = 3, min_n = 2
)
terms <- unique(c(keywords, title_terms))
return(terms)
print("These are the generated keywords and terms:")
}
GenerateKeywords(naive_results)
NamesOfCoumns
GenerateKeywords <- function(x) {
keywords <- extract_terms(keywords = x[, "keywords"],
method = "tagged", min_n = 2)
extract_terms(text = x[, "title"], method = "fakerake",
min_freq = 3, min_n = 2)
title_terms <- extract_terms(
text = x[, "title"],
method = "fakerake",
min_freq = 3, min_n = 2
)
terms <- unique(c(keywords, title_terms))
return(terms)
print("These are the generated keywords and terms:")
}
GenerateKeywords(naive_results)
GenerateKeywords <- function(x) {
keywords <- extract_terms(keywords = x[, "keywords"],
method = "tagged", min_n = 2)
extract_terms(text = x[, "title"], method = "fakerake",
min_freq = 3, min_n = 2)
title_terms <- extract_terms(
text = x[, "title"],
method = "fakerake",
min_freq = 3, min_n = 2
)
terms <- unique(c(keywords, title_terms))
print("These are the generated keywords and terms:")
return(terms)
}
GenerateKeywords(naive_results)
GenerateKeywords <- function(Datafile) {
keywords <- extract_terms(keywords = Datafile[, "keywords"],
method = "tagged", min_n = 2)
extract_terms(text = Datafile[, "title"], method = "fakerake",
min_freq = 3, min_n = 2)
title_terms <- extract_terms(
text = Datafile[, "title"],
method = "fakerake",
min_freq = 3, min_n = 2
)
terms <- unique(c(keywords, title_terms))
print("These are the generated keywords and terms:")
return(terms)
}
GenerateKeywords(naive_results)
# You can also use network analysis to identify keywords
# First combine all abstracts to 1 file
docs <- paste(naive_results[, "title"], naive_results[, "abstract"])
docs[]
# Now we create a matrix with the records
dfm <- create_dfm(elements = docs, features = terms)
dfm[1:3, 1:4]
g <- create_network(dfm, min_studies = 3)
# Graphing it
ggraph(g, layout = "stress") +
coord_fixed() +
expand_limits(x = c(-3, 3)) +
geom_edge_link(aes(alpha = weight)) +
geom_node_point(shape = "circle filled", fill = "white") +
geom_node_text(aes(label = name), hjust = "outward", check_overlap = TRUE) +
guides(edge_alpha = FALSE)
